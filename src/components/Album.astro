---
import {type CollectionEntry, getCollection} from "astro:content";

interface Props {
    parentId: string | null,
}

const {parentId} = Astro.props as Props

const albums = await getCollection('albums')
const getAlbumByParentId = (parentId: string | null): CollectionEntry<'albums'>[] => albums.filter((item) => item.data.parentId === parentId)

const subAlbums: CollectionEntry<'albums'>[] | false = getAlbumByParentId(parentId).length ? getAlbumByParentId(parentId) : false;
---

<div class="">

    {subAlbums && (

            <div class="">
                <ul class="grid gap-0.5 grid-cols-2 xl:grid-cols-3">
                    {subAlbums
                        .sort((a, b) => b.data.name.localeCompare(a.data.name))
                        .map((album: CollectionEntry<'albums'>) => (

                            <a href={`/album/${album.data.slug}/`} class="block relative hover:text-stone-200">

                                <img loading="lazy" src={album.data.thumbnail} alt={album.data.name}
                                     class="aspect-[4/5] object-cover w-full h-auto bg-stone-800">
                                <div class="absolute inset-0 p-2 content-center bg-[#00000085] hover:bg-[#00000095] text-sm lg:text-lg text-center font-medium shadow">{album.data.name}</div>
                            </a>
                    ))}
                </ul>
            </div>
    )}

</div>